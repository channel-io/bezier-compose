@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.compose.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material3.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.*
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.compose.BezierIcon

val BezierIcon.HyphenBold: ImageVector
    get() {
        return _hyphenBold ?: ImageVector.Builder(
                name = "HyphenBold",
                defaultWidth = 24.dp,
                defaultHeight = 24.dp,
                viewportWidth = 24f,
                viewportHeight = 24f,
        ).apply {
            path(
                    fill = SolidColor(Color(0xFF313234)),
                    strokeLineWidth = 1f,
            ) {
                moveTo(5.0f, 12.0f)
                curveTo(5.0f, 11.1716f, 5.6716f, 10.5f, 6.5f, 10.5f)
                lineTo(17.5f, 10.5f)
                curveTo(18.3284f, 10.5f, 19.0f, 11.1716f, 19.0f, 12.0f)
                curveTo(19.0f, 12.8284f, 18.3284f, 13.5f, 17.5f, 13.5f)
                lineTo(6.5f, 13.5f)
                curveTo(5.6716f, 13.5f, 5.0f, 12.8284f, 5.0f, 12.0f)
                close()
            }
        }.build().also {
            _hyphenBold = it
        }
    }

private var _hyphenBold: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun HyphenBoldIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcon.HyphenBold,
            contentDescription = null,
    )
}
