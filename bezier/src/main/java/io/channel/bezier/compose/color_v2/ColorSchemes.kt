package io.channel.bezier.compose.color_v2

class ColorSchemes internal constructor(
    functionalTokens: FunctionalTokens,
    semanticTokens: SemanticTokens,
) {
    val blue100: BezierColor = GlobalTokens.blue100
    val blue200: BezierColor = GlobalTokens.blue200
    val blue300: BezierColor = GlobalTokens.blue300
    val blue400: BezierColor = GlobalTokens.blue400
    val blue500: BezierColor = GlobalTokens.blue500
    val blue600: BezierColor = GlobalTokens.blue600
    val blue400_30: BezierColor = GlobalTokens.blue400_30
    val blue400_20: BezierColor = GlobalTokens.blue400_20
    val blue400_10: BezierColor = GlobalTokens.blue400_10
    val blue300_45: BezierColor = GlobalTokens.blue300_45
    val blue300_30: BezierColor = GlobalTokens.blue300_30
    val blue300_15: BezierColor = GlobalTokens.blue300_15
    val cobalt100: BezierColor = GlobalTokens.cobalt100
    val cobalt200: BezierColor = GlobalTokens.cobalt200
    val cobalt300: BezierColor = GlobalTokens.cobalt300
    val cobalt400: BezierColor = GlobalTokens.cobalt400
    val cobalt500: BezierColor = GlobalTokens.cobalt500
    val cobalt600: BezierColor = GlobalTokens.cobalt600
    val cobalt400_30: BezierColor = GlobalTokens.cobalt400_30
    val cobalt400_20: BezierColor = GlobalTokens.cobalt400_20
    val cobalt400_10: BezierColor = GlobalTokens.cobalt400_10
    val cobalt300_45: BezierColor = GlobalTokens.cobalt300_45
    val cobalt300_30: BezierColor = GlobalTokens.cobalt300_30
    val cobalt300_15: BezierColor = GlobalTokens.cobalt300_15
    val green100: BezierColor = GlobalTokens.green100
    val green200: BezierColor = GlobalTokens.green200
    val green300: BezierColor = GlobalTokens.green300
    val green400: BezierColor = GlobalTokens.green400
    val green500: BezierColor = GlobalTokens.green500
    val green600: BezierColor = GlobalTokens.green600
    val green400_30: BezierColor = GlobalTokens.green400_30
    val green400_20: BezierColor = GlobalTokens.green400_20
    val green400_10: BezierColor = GlobalTokens.green400_10
    val green300_45: BezierColor = GlobalTokens.green300_45
    val green300_30: BezierColor = GlobalTokens.green300_30
    val green300_15: BezierColor = GlobalTokens.green300_15
    val red100: BezierColor = GlobalTokens.red100
    val red200: BezierColor = GlobalTokens.red200
    val red300: BezierColor = GlobalTokens.red300
    val red400: BezierColor = GlobalTokens.red400
    val red500: BezierColor = GlobalTokens.red500
    val red600: BezierColor = GlobalTokens.red600
    val red400_30: BezierColor = GlobalTokens.red400_30
    val red400_20: BezierColor = GlobalTokens.red400_20
    val red400_10: BezierColor = GlobalTokens.red400_10
    val red300_45: BezierColor = GlobalTokens.red300_45
    val red300_30: BezierColor = GlobalTokens.red300_30
    val red300_15: BezierColor = GlobalTokens.red300_15
    val black3: BezierColor = GlobalTokens.black3
    val black5: BezierColor = GlobalTokens.black5
    val black8: BezierColor = GlobalTokens.black8
    val black15: BezierColor = GlobalTokens.black15
    val black20: BezierColor = GlobalTokens.black20
    val black22: BezierColor = GlobalTokens.black22
    val black30: BezierColor = GlobalTokens.black30
    val black40: BezierColor = GlobalTokens.black40
    val black50: BezierColor = GlobalTokens.black50
    val black60: BezierColor = GlobalTokens.black60
    val black70: BezierColor = GlobalTokens.black70
    val black85: BezierColor = GlobalTokens.black85
    val black100: BezierColor = GlobalTokens.black100
    val white0: BezierColor = GlobalTokens.white0
    val white5: BezierColor = GlobalTokens.white5
    val white8: BezierColor = GlobalTokens.white8
    val white12: BezierColor = GlobalTokens.white12
    val white20: BezierColor = GlobalTokens.white20
    val white40: BezierColor = GlobalTokens.white40
    val white60: BezierColor = GlobalTokens.white60
    val white80: BezierColor = GlobalTokens.white80
    val white90: BezierColor = GlobalTokens.white90
    val white100: BezierColor = GlobalTokens.white100
    val orange100: BezierColor = GlobalTokens.orange100
    val orange200: BezierColor = GlobalTokens.orange200
    val orange300: BezierColor = GlobalTokens.orange300
    val orange400: BezierColor = GlobalTokens.orange400
    val orange500: BezierColor = GlobalTokens.orange500
    val orange600: BezierColor = GlobalTokens.orange600
    val orange400_30: BezierColor = GlobalTokens.orange400_30
    val orange400_20: BezierColor = GlobalTokens.orange400_20
    val orange400_10: BezierColor = GlobalTokens.orange400_10
    val orange300_45: BezierColor = GlobalTokens.orange300_45
    val orange300_30: BezierColor = GlobalTokens.orange300_30
    val orange300_15: BezierColor = GlobalTokens.orange300_15
    val yellow100: BezierColor = GlobalTokens.yellow100
    val yellow200: BezierColor = GlobalTokens.yellow200
    val yellow300: BezierColor = GlobalTokens.yellow300
    val yellow400: BezierColor = GlobalTokens.yellow400
    val yellow500: BezierColor = GlobalTokens.yellow500
    val yellow600: BezierColor = GlobalTokens.yellow600
    val yellow400_30: BezierColor = GlobalTokens.yellow400_30
    val yellow400_20: BezierColor = GlobalTokens.yellow400_20
    val yellow400_10: BezierColor = GlobalTokens.yellow400_10
    val yellow300_45: BezierColor = GlobalTokens.yellow300_45
    val yellow300_30: BezierColor = GlobalTokens.yellow300_30
    val yellow300_15: BezierColor = GlobalTokens.yellow300_15
    val pink100: BezierColor = GlobalTokens.pink100
    val pink200: BezierColor = GlobalTokens.pink200
    val pink300: BezierColor = GlobalTokens.pink300
    val pink400: BezierColor = GlobalTokens.pink400
    val pink500: BezierColor = GlobalTokens.pink500
    val pink600: BezierColor = GlobalTokens.pink600
    val pink400_30: BezierColor = GlobalTokens.pink400_30
    val pink400_20: BezierColor = GlobalTokens.pink400_20
    val pink400_10: BezierColor = GlobalTokens.pink400_10
    val pink300_45: BezierColor = GlobalTokens.pink300_45
    val pink300_30: BezierColor = GlobalTokens.pink300_30
    val pink300_15: BezierColor = GlobalTokens.pink300_15
    val purple100: BezierColor = GlobalTokens.purple100
    val purple200: BezierColor = GlobalTokens.purple200
    val purple300: BezierColor = GlobalTokens.purple300
    val purple400: BezierColor = GlobalTokens.purple400
    val purple500: BezierColor = GlobalTokens.purple500
    val purple600: BezierColor = GlobalTokens.purple600
    val purple400_30: BezierColor = GlobalTokens.purple400_30
    val purple400_20: BezierColor = GlobalTokens.purple400_20
    val purple400_10: BezierColor = GlobalTokens.purple400_10
    val purple300_45: BezierColor = GlobalTokens.purple300_45
    val purple300_30: BezierColor = GlobalTokens.purple300_30
    val purple300_15: BezierColor = GlobalTokens.purple300_15
    val navy100: BezierColor = GlobalTokens.navy100
    val navy200: BezierColor = GlobalTokens.navy200
    val navy300: BezierColor = GlobalTokens.navy300
    val navy400: BezierColor = GlobalTokens.navy400
    val navy500: BezierColor = GlobalTokens.navy500
    val navy600: BezierColor = GlobalTokens.navy600
    val navy400_30: BezierColor = GlobalTokens.navy400_30
    val navy400_20: BezierColor = GlobalTokens.navy400_20
    val navy400_10: BezierColor = GlobalTokens.navy400_10
    val navy300_45: BezierColor = GlobalTokens.navy300_45
    val navy300_30: BezierColor = GlobalTokens.navy300_30
    val navy300_15: BezierColor = GlobalTokens.navy300_15
    val teal100: BezierColor = GlobalTokens.teal100
    val teal200: BezierColor = GlobalTokens.teal200
    val teal300: BezierColor = GlobalTokens.teal300
    val teal400: BezierColor = GlobalTokens.teal400
    val teal500: BezierColor = GlobalTokens.teal500
    val teal600: BezierColor = GlobalTokens.teal600
    val teal400_30: BezierColor = GlobalTokens.teal400_30
    val teal400_20: BezierColor = GlobalTokens.teal400_20
    val teal400_10: BezierColor = GlobalTokens.teal400_10
    val teal300_45: BezierColor = GlobalTokens.teal300_45
    val teal300_30: BezierColor = GlobalTokens.teal300_30
    val teal300_15: BezierColor = GlobalTokens.teal300_15
    val olive100: BezierColor = GlobalTokens.olive100
    val olive200: BezierColor = GlobalTokens.olive200
    val olive300: BezierColor = GlobalTokens.olive300
    val olive400: BezierColor = GlobalTokens.olive400
    val olive500: BezierColor = GlobalTokens.olive500
    val olive600: BezierColor = GlobalTokens.olive600
    val olive400_30: BezierColor = GlobalTokens.olive400_30
    val olive400_20: BezierColor = GlobalTokens.olive400_20
    val olive400_10: BezierColor = GlobalTokens.olive400_10
    val olive300_45: BezierColor = GlobalTokens.olive300_45
    val olive300_30: BezierColor = GlobalTokens.olive300_30
    val olive300_15: BezierColor = GlobalTokens.olive300_15
    val grey50: BezierColor = GlobalTokens.grey50
    val grey100: BezierColor = GlobalTokens.grey100
    val grey200: BezierColor = GlobalTokens.grey200
    val grey300: BezierColor = GlobalTokens.grey300
    val grey400: BezierColor = GlobalTokens.grey400
    val grey500: BezierColor = GlobalTokens.grey500
    val grey600: BezierColor = GlobalTokens.grey600
    val grey700: BezierColor = GlobalTokens.grey700
    val grey800: BezierColor = GlobalTokens.grey800
    val grey850: BezierColor = GlobalTokens.grey850
    val grey900: BezierColor = GlobalTokens.grey900
    val greyAlpha900_90: BezierColor = GlobalTokens.greyAlpha900_90
    val greyAlpha850_80: BezierColor = GlobalTokens.greyAlpha850_80
    val greyAlpha800_80: BezierColor = GlobalTokens.greyAlpha800_80
    val greyAlpha700_80: BezierColor = GlobalTokens.greyAlpha700_80
    val greyAlpha200_80: BezierColor = GlobalTokens.greyAlpha200_80
    val greyAlpha100_80: BezierColor = GlobalTokens.greyAlpha100_80
    val greyAlpha50_80: BezierColor = GlobalTokens.greyAlpha50_80
    val greyAlpha100_90: BezierColor = GlobalTokens.greyAlpha100_90
    val greyAlpha800_90: BezierColor = GlobalTokens.greyAlpha800_90
    val shadeBlue400: BezierColor = GlobalTokens.shadeBlue400
    val shadeBlue600: BezierColor = GlobalTokens.shadeBlue600
    val shadeBlue400_20: BezierColor = GlobalTokens.shadeBlue400_20
    val shadeBlue600_40: BezierColor = GlobalTokens.shadeBlue600_40
    val shadeCobalt400: BezierColor = GlobalTokens.shadeCobalt400
    val shadeCobalt600: BezierColor = GlobalTokens.shadeCobalt600
    val shadeCobalt400_20: BezierColor = GlobalTokens.shadeCobalt400_20
    val shadeCobalt600_40: BezierColor = GlobalTokens.shadeCobalt600_40
    val shadeTeal400: BezierColor = GlobalTokens.shadeTeal400
    val shadeTeal600: BezierColor = GlobalTokens.shadeTeal600
    val shadeTeal400_20: BezierColor = GlobalTokens.shadeTeal400_20
    val shadeTeal600_40: BezierColor = GlobalTokens.shadeTeal600_40
    val shadeRed400: BezierColor = GlobalTokens.shadeRed400
    val shadeRed600: BezierColor = GlobalTokens.shadeRed600
    val shadeRed400_20: BezierColor = GlobalTokens.shadeRed400_20
    val shadeRed600_40: BezierColor = GlobalTokens.shadeRed600_40
    val shadeGreen400: BezierColor = GlobalTokens.shadeGreen400
    val shadeGreen600: BezierColor = GlobalTokens.shadeGreen600
    val shadeGreen400_20: BezierColor = GlobalTokens.shadeGreen400_20
    val shadeGreen600_40: BezierColor = GlobalTokens.shadeGreen600_40
    val shadeOlive400: BezierColor = GlobalTokens.shadeOlive400
    val shadeOlive600: BezierColor = GlobalTokens.shadeOlive600
    val shadeOlive400_20: BezierColor = GlobalTokens.shadeOlive400_20
    val shadeOlive600_40: BezierColor = GlobalTokens.shadeOlive600_40
    val shadeYellow400: BezierColor = GlobalTokens.shadeYellow400
    val shadeYellow600: BezierColor = GlobalTokens.shadeYellow600
    val shadeYellow400_20: BezierColor = GlobalTokens.shadeYellow400_20
    val shadeYellow600_40: BezierColor = GlobalTokens.shadeYellow600_40
    val shadeOrange400: BezierColor = GlobalTokens.shadeOrange400
    val shadeOrange600: BezierColor = GlobalTokens.shadeOrange600
    val shadeOrange400_20: BezierColor = GlobalTokens.shadeOrange400_20
    val shadeOrange600_40: BezierColor = GlobalTokens.shadeOrange600_40
    val shadePink400: BezierColor = GlobalTokens.shadePink400
    val shadePink600: BezierColor = GlobalTokens.shadePink600
    val shadePink400_20: BezierColor = GlobalTokens.shadePink400_20
    val shadePink600_40: BezierColor = GlobalTokens.shadePink600_40
    val shadePurple400: BezierColor = GlobalTokens.shadePurple400
    val shadePurple600: BezierColor = GlobalTokens.shadePurple600
    val shadePurple400_20: BezierColor = GlobalTokens.shadePurple400_20
    val shadePurple600_40: BezierColor = GlobalTokens.shadePurple600_40
    val shadeNavy400: BezierColor = GlobalTokens.shadeNavy400
    val shadeNavy600: BezierColor = GlobalTokens.shadeNavy600
    val shadeNavy400_20: BezierColor = GlobalTokens.shadeNavy400_20
    val shadeNavy600_40: BezierColor = GlobalTokens.shadeNavy600_40

    val fgBlackPure: BezierColor = functionalTokens.fgBlackPure
    val fgBlackDarkest: BezierColor = functionalTokens.fgBlackDarkest
    val fgBlackDarker: BezierColor = functionalTokens.fgBlackDarker
    val fgBlackDark: BezierColor = functionalTokens.fgBlackDark
    val fgBlackLight: BezierColor = functionalTokens.fgBlackLight
    val fgBlackLightest: BezierColor = functionalTokens.fgBlackLightest
    val fgWhiteNormal: BezierColor = functionalTokens.fgWhiteNormal
    val fgBlueNormal: BezierColor = functionalTokens.fgBlueNormal
    val fgBlueLight: BezierColor = functionalTokens.fgBlueLight
    val fgBlueDark: BezierColor = functionalTokens.fgBlueDark
    val fgCobaltNormal: BezierColor = functionalTokens.fgCobaltNormal
    val fgCobaltLight: BezierColor = functionalTokens.fgCobaltLight
    val fgCobaltDark: BezierColor = functionalTokens.fgCobaltDark
    val fgRedNormal: BezierColor = functionalTokens.fgRedNormal
    val fgRedLight: BezierColor = functionalTokens.fgRedLight
    val fgRedDark: BezierColor = functionalTokens.fgRedDark
    val fgOrangeNormal: BezierColor = functionalTokens.fgOrangeNormal
    val fgOrangeLight: BezierColor = functionalTokens.fgOrangeLight
    val fgOrangeDark: BezierColor = functionalTokens.fgOrangeDark
    val fgGreenNormal: BezierColor = functionalTokens.fgGreenNormal
    val fgGreenLight: BezierColor = functionalTokens.fgGreenLight
    val fgGreenDark: BezierColor = functionalTokens.fgGreenDark
    val fgTealNormal: BezierColor = functionalTokens.fgTealNormal
    val fgTealLight: BezierColor = functionalTokens.fgTealLight
    val fgTealDark: BezierColor = functionalTokens.fgTealDark
    val fgOliveNormal: BezierColor = functionalTokens.fgOliveNormal
    val fgOliveLight: BezierColor = functionalTokens.fgOliveLight
    val fgOliveDark: BezierColor = functionalTokens.fgOliveDark
    val fgYellowNormal: BezierColor = functionalTokens.fgYellowNormal
    val fgYellowLight: BezierColor = functionalTokens.fgYellowLight
    val fgYellowDark: BezierColor = functionalTokens.fgYellowDark
    val fgPinkNormal: BezierColor = functionalTokens.fgPinkNormal
    val fgPinkLight: BezierColor = functionalTokens.fgPinkLight
    val fgPinkDark: BezierColor = functionalTokens.fgPinkDark
    val fgPurpleNormal: BezierColor = functionalTokens.fgPurpleNormal
    val fgPurpleLight: BezierColor = functionalTokens.fgPurpleLight
    val fgPurpleDark: BezierColor = functionalTokens.fgPurpleDark
    val fgNavyNormal: BezierColor = functionalTokens.fgNavyNormal
    val fgNavyLight: BezierColor = functionalTokens.fgNavyLight
    val fgNavyDark: BezierColor = functionalTokens.fgNavyDark
    val fgAbsoluteBlackDark: BezierColor = functionalTokens.fgAbsoluteBlackDark
    val fgAbsoluteBlackNormal: BezierColor = functionalTokens.fgAbsoluteBlackNormal
    val fgAbsoluteBlackLight: BezierColor = functionalTokens.fgAbsoluteBlackLight
    val fgAbsoluteBlackLighter: BezierColor = functionalTokens.fgAbsoluteBlackLighter
    val fgAbsoluteBlackLightest: BezierColor = functionalTokens.fgAbsoluteBlackLightest
    val fgAbsoluteWhiteDark: BezierColor = functionalTokens.fgAbsoluteWhiteDark
    val fgAbsoluteWhiteNormal: BezierColor = functionalTokens.fgAbsoluteWhiteNormal
    val fgAbsoluteWhiteLight: BezierColor = functionalTokens.fgAbsoluteWhiteLight
    val fgAbsoluteWhiteLighter: BezierColor = functionalTokens.fgAbsoluteWhiteLighter
    val fgAbsoluteWhiteLightest: BezierColor = functionalTokens.fgAbsoluteWhiteLightest
    val fgGreyDark: BezierColor = functionalTokens.fgGreyDark
    val fgGreyNormal: BezierColor = functionalTokens.fgGreyNormal
    val fgGreyLight: BezierColor = functionalTokens.fgGreyLight
    val fgGreyLighter: BezierColor = functionalTokens.fgGreyLighter
    val fgGreyLightest: BezierColor = functionalTokens.fgGreyLightest
    val fgGreyGreyAlphaDarker: BezierColor = functionalTokens.fgGreyGreyAlphaDarker
    val fgGreyGreyAlphaDark: BezierColor = functionalTokens.fgGreyGreyAlphaDark
    val fgGreyGreyAlphaLight: BezierColor = functionalTokens.fgGreyGreyAlphaLight
    val bgBlackDarkest: BezierColor = functionalTokens.bgBlackDarkest
    val bgBlackDarker: BezierColor = functionalTokens.bgBlackDarker
    val bgBlackDark: BezierColor = functionalTokens.bgBlackDark
    val bgBlackLight: BezierColor = functionalTokens.bgBlackLight
    val bgBlackLighter: BezierColor = functionalTokens.bgBlackLighter
    val bgBlackLightest: BezierColor = functionalTokens.bgBlackLightest
    val bgBlackTransparent: BezierColor = functionalTokens.bgBlackTransparent
    val bgGreyDarkest: BezierColor = functionalTokens.bgGreyDarkest
    val bgGreyDark: BezierColor = functionalTokens.bgGreyDark
    val bgGreyLight: BezierColor = functionalTokens.bgGreyLight
    val bgGreyLighter: BezierColor = functionalTokens.bgGreyLighter
    val bgGreyLightest: BezierColor = functionalTokens.bgGreyLightest
    val bgGreyGreyAlphaDarkest: BezierColor = functionalTokens.bgGreyGreyAlphaDarkest
    val bgGreyGreyAlphaDarker: BezierColor = functionalTokens.bgGreyGreyAlphaDarker
    val bgGreyGreyAlphaDark: BezierColor = functionalTokens.bgGreyGreyAlphaDark
    val bgGreyGreyAlphaLight: BezierColor = functionalTokens.bgGreyGreyAlphaLight
    val bgGreyNormal: BezierColor = functionalTokens.bgGreyNormal
    val bgWhiteHighest: BezierColor = functionalTokens.bgWhiteHighest
    val bgWhiteHigher: BezierColor = functionalTokens.bgWhiteHigher
    val bgWhiteNormal: BezierColor = functionalTokens.bgWhiteNormal
    val bgWhiteWhiteAlphaLightest: BezierColor = functionalTokens.bgWhiteWhiteAlphaLightest
    val bgWhiteWhiteAlphaLighter: BezierColor = functionalTokens.bgWhiteWhiteAlphaLighter
    val bgWhiteWhiteAlphaLight: BezierColor = functionalTokens.bgWhiteWhiteAlphaLight
    val bgWhiteWhiteAlphaTransparent: BezierColor = functionalTokens.bgWhiteWhiteAlphaTransparent
    val bgBlueNormal: BezierColor = functionalTokens.bgBlueNormal
    val bgBlueLight: BezierColor = functionalTokens.bgBlueLight
    val bgBlueLighter: BezierColor = functionalTokens.bgBlueLighter
    val bgBlueLightest: BezierColor = functionalTokens.bgBlueLightest
    val bgBlueDark: BezierColor = functionalTokens.bgBlueDark
    val bgBlueShadeLight: BezierColor = functionalTokens.bgBlueShadeLight
    val bgBlueShadeNormal: BezierColor = functionalTokens.bgBlueShadeNormal
    val bgCobaltNormal: BezierColor = functionalTokens.bgCobaltNormal
    val bgCobaltLight: BezierColor = functionalTokens.bgCobaltLight
    val bgCobaltLighter: BezierColor = functionalTokens.bgCobaltLighter
    val bgCobaltLightest: BezierColor = functionalTokens.bgCobaltLightest
    val bgCobaltDark: BezierColor = functionalTokens.bgCobaltDark
    val bgCobaltShadeLight: BezierColor = functionalTokens.bgCobaltShadeLight
    val bgCobaltShadeNormal: BezierColor = functionalTokens.bgCobaltShadeNormal
    val bgRedNormal: BezierColor = functionalTokens.bgRedNormal
    val bgRedLight: BezierColor = functionalTokens.bgRedLight
    val bgRedLighter: BezierColor = functionalTokens.bgRedLighter
    val bgRedLightest: BezierColor = functionalTokens.bgRedLightest
    val bgRedDark: BezierColor = functionalTokens.bgRedDark
    val bgRedShadeLight: BezierColor = functionalTokens.bgRedShadeLight
    val bgRedShadeNormal: BezierColor = functionalTokens.bgRedShadeNormal
    val bgOrangeNormal: BezierColor = functionalTokens.bgOrangeNormal
    val bgOrangeLight: BezierColor = functionalTokens.bgOrangeLight
    val bgOrangeLighter: BezierColor = functionalTokens.bgOrangeLighter
    val bgOrangeLightest: BezierColor = functionalTokens.bgOrangeLightest
    val bgOrangeDark: BezierColor = functionalTokens.bgOrangeDark
    val bgOrangeShadeLight: BezierColor = functionalTokens.bgOrangeShadeLight
    val bgOrangeShadeNormal: BezierColor = functionalTokens.bgOrangeShadeNormal
    val bgGreenNormal: BezierColor = functionalTokens.bgGreenNormal
    val bgGreenLight: BezierColor = functionalTokens.bgGreenLight
    val bgGreenLighter: BezierColor = functionalTokens.bgGreenLighter
    val bgGreenLightest: BezierColor = functionalTokens.bgGreenLightest
    val bgGreenDark: BezierColor = functionalTokens.bgGreenDark
    val bgGreenShadeLight: BezierColor = functionalTokens.bgGreenShadeLight
    val bgGreenShadeNormal: BezierColor = functionalTokens.bgGreenShadeNormal
    val bgTealNormal: BezierColor = functionalTokens.bgTealNormal
    val bgTealLight: BezierColor = functionalTokens.bgTealLight
    val bgTealLighter: BezierColor = functionalTokens.bgTealLighter
    val bgTealLightest: BezierColor = functionalTokens.bgTealLightest
    val bgTealDark: BezierColor = functionalTokens.bgTealDark
    val bgTealShadeLight: BezierColor = functionalTokens.bgTealShadeLight
    val bgTealShadeNormal: BezierColor = functionalTokens.bgTealShadeNormal
    val bgOliveNormal: BezierColor = functionalTokens.bgOliveNormal
    val bgOliveLight: BezierColor = functionalTokens.bgOliveLight
    val bgOliveLighter: BezierColor = functionalTokens.bgOliveLighter
    val bgOliveLightest: BezierColor = functionalTokens.bgOliveLightest
    val bgOliveDark: BezierColor = functionalTokens.bgOliveDark
    val bgOliveShadeLight: BezierColor = functionalTokens.bgOliveShadeLight
    val bgOliveShadeNormal: BezierColor = functionalTokens.bgOliveShadeNormal
    val bgYellowNormal: BezierColor = functionalTokens.bgYellowNormal
    val bgYellowLight: BezierColor = functionalTokens.bgYellowLight
    val bgYellowLighter: BezierColor = functionalTokens.bgYellowLighter
    val bgYellowLightest: BezierColor = functionalTokens.bgYellowLightest
    val bgYellowDark: BezierColor = functionalTokens.bgYellowDark
    val bgYellowShadeLight: BezierColor = functionalTokens.bgYellowShadeLight
    val bgYellowShadeNormal: BezierColor = functionalTokens.bgYellowShadeNormal
    val bgPinkNormal: BezierColor = functionalTokens.bgPinkNormal
    val bgPinkLight: BezierColor = functionalTokens.bgPinkLight
    val bgPinkLighter: BezierColor = functionalTokens.bgPinkLighter
    val bgPinkLightest: BezierColor = functionalTokens.bgPinkLightest
    val bgPinkDark: BezierColor = functionalTokens.bgPinkDark
    val bgPinkShadeLight: BezierColor = functionalTokens.bgPinkShadeLight
    val bgPinkShadeNormal: BezierColor = functionalTokens.bgPinkShadeNormal
    val bgPurpleNormal: BezierColor = functionalTokens.bgPurpleNormal
    val bgPurpleLight: BezierColor = functionalTokens.bgPurpleLight
    val bgPurpleLighter: BezierColor = functionalTokens.bgPurpleLighter
    val bgPurpleLightest: BezierColor = functionalTokens.bgPurpleLightest
    val bgPurpleDark: BezierColor = functionalTokens.bgPurpleDark
    val bgPurpleShadeLight: BezierColor = functionalTokens.bgPurpleShadeLight
    val bgPurpleShadeNormal: BezierColor = functionalTokens.bgPurpleShadeNormal
    val bgNavyNormal: BezierColor = functionalTokens.bgNavyNormal
    val bgNavyLight: BezierColor = functionalTokens.bgNavyLight
    val bgNavyLighter: BezierColor = functionalTokens.bgNavyLighter
    val bgNavyLightest: BezierColor = functionalTokens.bgNavyLightest
    val bgNavyDark: BezierColor = functionalTokens.bgNavyDark
    val bgNavyShadeLight: BezierColor = functionalTokens.bgNavyShadeLight
    val bgNavyShadeNormal: BezierColor = functionalTokens.bgNavyShadeNormal
    val bgAbsoluteBlackDark: BezierColor = functionalTokens.bgAbsoluteBlackDark
    val bgAbsoluteBlackNormal: BezierColor = functionalTokens.bgAbsoluteBlackNormal
    val bgAbsoluteBlackLight: BezierColor = functionalTokens.bgAbsoluteBlackLight
    val bgAbsoluteBlackLighter: BezierColor = functionalTokens.bgAbsoluteBlackLighter
    val bgAbsoluteBlackLightest: BezierColor = functionalTokens.bgAbsoluteBlackLightest
    val bgAbsoluteWhiteDark: BezierColor = functionalTokens.bgAbsoluteWhiteDark
    val bgAbsoluteWhiteNormal: BezierColor = functionalTokens.bgAbsoluteWhiteNormal
    val bgAbsoluteWhiteLight: BezierColor = functionalTokens.bgAbsoluteWhiteLight
    val bgAbsoluteWhiteLighter: BezierColor = functionalTokens.bgAbsoluteWhiteLighter
    val bgAbsoluteWhiteLightest: BezierColor = functionalTokens.bgAbsoluteWhiteLightest
    val surfaceLowest: BezierColor = functionalTokens.surfaceLowest
    val surfaceLower: BezierColor = functionalTokens.surfaceLower
    val surfaceNormal: BezierColor = functionalTokens.surfaceNormal
    val shadowXlarge: BezierColor = functionalTokens.shadowXlarge
    val shadowLarge: BezierColor = functionalTokens.shadowLarge
    val shadowMedium: BezierColor = functionalTokens.shadowMedium
    val shadowSmall: BezierColor = functionalTokens.shadowSmall
    val shadowBase: BezierColor = functionalTokens.shadowBase
    val shadowBaseInner: BezierColor = functionalTokens.shadowBaseInner

    val primaryBgNormal: BezierColor = semanticTokens.primaryBgNormal
    val primaryBgLight: BezierColor = semanticTokens.primaryBgLight
    val primaryBgLighter: BezierColor = semanticTokens.primaryBgLighter
    val primaryBgLightest: BezierColor = semanticTokens.primaryBgLightest
    val primaryBgDark: BezierColor = semanticTokens.primaryBgDark
    val primaryFgNormal: BezierColor = semanticTokens.primaryFgNormal
    val primaryFgLight: BezierColor = semanticTokens.primaryFgLight
    val primaryFgDark: BezierColor = semanticTokens.primaryFgDark
    val criticalBgDark: BezierColor = semanticTokens.criticalBgDark
    val criticalBgNormal: BezierColor = semanticTokens.criticalBgNormal
    val criticalBgLight: BezierColor = semanticTokens.criticalBgLight
    val criticalBgLighter: BezierColor = semanticTokens.criticalBgLighter
    val criticalBgLightest: BezierColor = semanticTokens.criticalBgLightest
    val criticalFgNormal: BezierColor = semanticTokens.criticalFgNormal
    val criticalFgLight: BezierColor = semanticTokens.criticalFgLight
    val criticalFgDark: BezierColor = semanticTokens.criticalFgDark
    val warningBgDark: BezierColor = semanticTokens.warningBgDark
    val warningBgNormal: BezierColor = semanticTokens.warningBgNormal
    val warningBgLight: BezierColor = semanticTokens.warningBgLight
    val warningBgLighter: BezierColor = semanticTokens.warningBgLighter
    val warningBgLightest: BezierColor = semanticTokens.warningBgLightest
    val warningFgNormal: BezierColor = semanticTokens.warningFgNormal
    val warningFgLight: BezierColor = semanticTokens.warningFgLight
    val warningFgDark: BezierColor = semanticTokens.warningFgDark
    val accentBgDark: BezierColor = semanticTokens.accentBgDark
    val accentBgNormal: BezierColor = semanticTokens.accentBgNormal
    val accentBgLight: BezierColor = semanticTokens.accentBgLight
    val accentBgLighter: BezierColor = semanticTokens.accentBgLighter
    val accentBgLightest: BezierColor = semanticTokens.accentBgLightest
    val accentFgNormal: BezierColor = semanticTokens.accentFgNormal
    val accentFgLight: BezierColor = semanticTokens.accentFgLight
    val accentFgDark: BezierColor = semanticTokens.accentFgDark
    val successBgDark: BezierColor = semanticTokens.successBgDark
    val successBgNormal: BezierColor = semanticTokens.successBgNormal
    val successBgLight: BezierColor = semanticTokens.successBgLight
    val successBgLighter: BezierColor = semanticTokens.successBgLighter
    val successBgLightest: BezierColor = semanticTokens.successBgLightest
    val successFgNormal: BezierColor = semanticTokens.successFgNormal
    val successFgLight: BezierColor = semanticTokens.successFgLight
    val successFgDark: BezierColor = semanticTokens.successFgDark

    val gradientFgGreen: List<BezierColor> = listOf(GlobalTokens.green400, GlobalTokens.green300)
    val gradientFgBlack: List<BezierColor> = listOf(functionalTokens.fgBlackLightest, functionalTokens.fgBlackLight)
    val gradientBgPurple: List<BezierColor> = listOf(GlobalTokens.purple300, GlobalTokens.pink200)
    val gradientBgOrange: List<BezierColor> = listOf(GlobalTokens.orange300, GlobalTokens.yellow200)
    val gradientBgGreen: List<BezierColor> = listOf(GlobalTokens.green300, GlobalTokens.teal200)
    val gradientBgBlue: List<BezierColor> = listOf(GlobalTokens.blue300, GlobalTokens.green200)

    val dimBlackNormal: BezierColor = functionalTokens.bgAbsoluteBlackLighter
    val dimBlackLight: BezierColor = functionalTokens.bgAbsoluteBlackLightest
}
