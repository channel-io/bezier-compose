package io.channel.bezier.compose.color_v2

internal data class FunctionalTokens(
    val fgBlackPure: BezierColor,
    val fgBlackDarkest: BezierColor,
    val fgBlackDarker: BezierColor,
    val fgBlackDark: BezierColor,
    val fgBlackLight: BezierColor,
    val fgBlackLightest: BezierColor,
    val fgWhiteNormal: BezierColor,
    val fgBlueNormal: BezierColor,
    val fgBlueLight: BezierColor,
    val fgBlueDark: BezierColor,
    val fgCobaltNormal: BezierColor,
    val fgCobaltLight: BezierColor,
    val fgCobaltDark: BezierColor,
    val fgRedNormal: BezierColor,
    val fgRedLight: BezierColor,
    val fgRedDark: BezierColor,
    val fgOrangeNormal: BezierColor,
    val fgOrangeLight: BezierColor,
    val fgOrangeDark: BezierColor,
    val fgGreenNormal: BezierColor,
    val fgGreenLight: BezierColor,
    val fgGreenDark: BezierColor,
    val fgTealNormal: BezierColor,
    val fgTealLight: BezierColor,
    val fgTealDark: BezierColor,
    val fgOliveNormal: BezierColor,
    val fgOliveLight: BezierColor,
    val fgOliveDark: BezierColor,
    val fgYellowNormal: BezierColor,
    val fgYellowLight: BezierColor,
    val fgYellowDark: BezierColor,
    val fgPinkNormal: BezierColor,
    val fgPinkLight: BezierColor,
    val fgPinkDark: BezierColor,
    val fgPurpleNormal: BezierColor,
    val fgPurpleLight: BezierColor,
    val fgPurpleDark: BezierColor,
    val fgNavyNormal: BezierColor,
    val fgNavyLight: BezierColor,
    val fgNavyDark: BezierColor,
    val fgAbsoluteBlackDark: BezierColor,
    val fgAbsoluteBlackNormal: BezierColor,
    val fgAbsoluteBlackLight: BezierColor,
    val fgAbsoluteBlackLighter: BezierColor,
    val fgAbsoluteBlackLightest: BezierColor,
    val fgAbsoluteWhiteDark: BezierColor,
    val fgAbsoluteWhiteNormal: BezierColor,
    val fgAbsoluteWhiteLight: BezierColor,
    val fgAbsoluteWhiteLighter: BezierColor,
    val fgAbsoluteWhiteLightest: BezierColor,
    val fgGreyDark: BezierColor,
    val fgGreyNormal: BezierColor,
    val fgGreyLight: BezierColor,
    val fgGreyLighter: BezierColor,
    val fgGreyLightest: BezierColor,
    val fgGreyGreyAlphaDarker: BezierColor,
    val fgGreyGreyAlphaDark: BezierColor,
    val fgGreyGreyAlphaLight: BezierColor,
    val bgBlackDarkest: BezierColor,
    val bgBlackDarker: BezierColor,
    val bgBlackDark: BezierColor,
    val bgBlackLight: BezierColor,
    val bgBlackLighter: BezierColor,
    val bgBlackLightest: BezierColor,
    val bgBlackTransparent: BezierColor,
    val bgGreyDarkest: BezierColor,
    val bgGreyDark: BezierColor,
    val bgGreyLight: BezierColor,
    val bgGreyLighter: BezierColor,
    val bgGreyLightest: BezierColor,
    val bgGreyGreyAlphaDarkest: BezierColor,
    val bgGreyGreyAlphaDarker: BezierColor,
    val bgGreyGreyAlphaDark: BezierColor,
    val bgGreyGreyAlphaLight: BezierColor,
    val bgGreyNormal: BezierColor,
    val bgWhiteHighest: BezierColor,
    val bgWhiteHigher: BezierColor,
    val bgWhiteNormal: BezierColor,
    val bgWhiteWhiteAlphaLightest: BezierColor,
    val bgWhiteWhiteAlphaLighter: BezierColor,
    val bgWhiteWhiteAlphaLight: BezierColor,
    val bgWhiteWhiteAlphaTransparent: BezierColor,
    val bgBlueNormal: BezierColor,
    val bgBlueLight: BezierColor,
    val bgBlueLighter: BezierColor,
    val bgBlueLightest: BezierColor,
    val bgBlueDark: BezierColor,
    val bgBlueShadeLight: BezierColor,
    val bgBlueShadeNormal: BezierColor,
    val bgCobaltNormal: BezierColor,
    val bgCobaltLight: BezierColor,
    val bgCobaltLighter: BezierColor,
    val bgCobaltLightest: BezierColor,
    val bgCobaltDark: BezierColor,
    val bgCobaltShadeLight: BezierColor,
    val bgCobaltShadeNormal: BezierColor,
    val bgRedNormal: BezierColor,
    val bgRedLight: BezierColor,
    val bgRedLighter: BezierColor,
    val bgRedLightest: BezierColor,
    val bgRedDark: BezierColor,
    val bgRedShadeLight: BezierColor,
    val bgRedShadeNormal: BezierColor,
    val bgOrangeNormal: BezierColor,
    val bgOrangeLight: BezierColor,
    val bgOrangeLighter: BezierColor,
    val bgOrangeLightest: BezierColor,
    val bgOrangeDark: BezierColor,
    val bgOrangeShadeLight: BezierColor,
    val bgOrangeShadeNormal: BezierColor,
    val bgGreenNormal: BezierColor,
    val bgGreenLight: BezierColor,
    val bgGreenLighter: BezierColor,
    val bgGreenLightest: BezierColor,
    val bgGreenDark: BezierColor,
    val bgGreenShadeLight: BezierColor,
    val bgGreenShadeNormal: BezierColor,
    val bgTealNormal: BezierColor,
    val bgTealLight: BezierColor,
    val bgTealLighter: BezierColor,
    val bgTealLightest: BezierColor,
    val bgTealDark: BezierColor,
    val bgTealShadeLight: BezierColor,
    val bgTealShadeNormal: BezierColor,
    val bgOliveNormal: BezierColor,
    val bgOliveLight: BezierColor,
    val bgOliveLighter: BezierColor,
    val bgOliveLightest: BezierColor,
    val bgOliveDark: BezierColor,
    val bgOliveShadeLight: BezierColor,
    val bgOliveShadeNormal: BezierColor,
    val bgYellowNormal: BezierColor,
    val bgYellowLight: BezierColor,
    val bgYellowLighter: BezierColor,
    val bgYellowLightest: BezierColor,
    val bgYellowDark: BezierColor,
    val bgYellowShadeLight: BezierColor,
    val bgYellowShadeNormal: BezierColor,
    val bgPinkNormal: BezierColor,
    val bgPinkLight: BezierColor,
    val bgPinkLighter: BezierColor,
    val bgPinkLightest: BezierColor,
    val bgPinkDark: BezierColor,
    val bgPinkShadeLight: BezierColor,
    val bgPinkShadeNormal: BezierColor,
    val bgPurpleNormal: BezierColor,
    val bgPurpleLight: BezierColor,
    val bgPurpleLighter: BezierColor,
    val bgPurpleLightest: BezierColor,
    val bgPurpleDark: BezierColor,
    val bgPurpleShadeLight: BezierColor,
    val bgPurpleShadeNormal: BezierColor,
    val bgNavyNormal: BezierColor,
    val bgNavyLight: BezierColor,
    val bgNavyLighter: BezierColor,
    val bgNavyLightest: BezierColor,
    val bgNavyDark: BezierColor,
    val bgNavyShadeLight: BezierColor,
    val bgNavyShadeNormal: BezierColor,
    val bgAbsoluteBlackDark: BezierColor,
    val bgAbsoluteBlackNormal: BezierColor,
    val bgAbsoluteBlackLight: BezierColor,
    val bgAbsoluteBlackLighter: BezierColor,
    val bgAbsoluteBlackLightest: BezierColor,
    val bgAbsoluteBlackTransparent: BezierColor,
    val bgAbsoluteWhiteDark: BezierColor,
    val bgAbsoluteWhiteNormal: BezierColor,
    val bgAbsoluteWhiteLight: BezierColor,
    val bgAbsoluteWhiteLighter: BezierColor,
    val bgAbsoluteWhiteLightest: BezierColor,
    val bgAbsoluteWhiteTransparent: BezierColor,
    val surfaceLowest: BezierColor,
    val surfaceLower: BezierColor,
    val surfaceNormal: BezierColor,
    val shadowXlarge: BezierColor,
    val shadowLarge: BezierColor,
    val shadowMedium: BezierColor,
    val shadowSmall: BezierColor,
    val shadowBase: BezierColor,
    val shadowBaseInner: BezierColor,
)

internal fun lightFunctionalTokens() = FunctionalTokens(
    fgBlackPure = FunctionalToken(GlobalTokens.black100),
    fgBlackDarkest = FunctionalToken(GlobalTokens.black85),
    fgBlackDarker = FunctionalToken(GlobalTokens.black60),
    fgBlackDark = FunctionalToken(GlobalTokens.black40),
    fgBlackLight = FunctionalToken(GlobalTokens.black15),
    fgBlackLightest = FunctionalToken(GlobalTokens.black8),
    fgWhiteNormal = FunctionalToken(GlobalTokens.white100),
    fgBlueNormal = FunctionalToken(GlobalTokens.blue400),
    fgBlueLight = FunctionalToken(GlobalTokens.blue400_30),
    fgBlueDark = FunctionalToken(GlobalTokens.blue500),
    fgCobaltNormal = FunctionalToken(GlobalTokens.cobalt400),
    fgCobaltLight = FunctionalToken(GlobalTokens.cobalt400_30),
    fgCobaltDark = FunctionalToken(GlobalTokens.cobalt500),
    fgRedNormal = FunctionalToken(GlobalTokens.red400),
    fgRedLight = FunctionalToken(GlobalTokens.red400_30),
    fgRedDark = FunctionalToken(GlobalTokens.red500),
    fgOrangeNormal = FunctionalToken(GlobalTokens.orange400),
    fgOrangeLight = FunctionalToken(GlobalTokens.orange400_30),
    fgOrangeDark = FunctionalToken(GlobalTokens.orange500),
    fgGreenNormal = FunctionalToken(GlobalTokens.green400),
    fgGreenLight = FunctionalToken(GlobalTokens.green400_30),
    fgGreenDark = FunctionalToken(GlobalTokens.green500),
    fgTealNormal = FunctionalToken(GlobalTokens.teal400),
    fgTealLight = FunctionalToken(GlobalTokens.teal400_30),
    fgTealDark = FunctionalToken(GlobalTokens.teal500),
    fgOliveNormal = FunctionalToken(GlobalTokens.olive400),
    fgOliveLight = FunctionalToken(GlobalTokens.olive400_30),
    fgOliveDark = FunctionalToken(GlobalTokens.olive500),
    fgYellowNormal = FunctionalToken(GlobalTokens.yellow400),
    fgYellowLight = FunctionalToken(GlobalTokens.yellow400_30),
    fgYellowDark = FunctionalToken(GlobalTokens.yellow500),
    fgPinkNormal = FunctionalToken(GlobalTokens.pink400),
    fgPinkLight = FunctionalToken(GlobalTokens.pink400_30),
    fgPinkDark = FunctionalToken(GlobalTokens.pink500),
    fgPurpleNormal = FunctionalToken(GlobalTokens.purple400),
    fgPurpleLight = FunctionalToken(GlobalTokens.purple400_30),
    fgPurpleDark = FunctionalToken(GlobalTokens.purple500),
    fgNavyNormal = FunctionalToken(GlobalTokens.navy400),
    fgNavyLight = FunctionalToken(GlobalTokens.navy400_30),
    fgNavyDark = FunctionalToken(GlobalTokens.navy500),
    fgAbsoluteBlackDark = FunctionalToken(GlobalTokens.black100),
    fgAbsoluteBlackNormal = FunctionalToken(GlobalTokens.black85),
    fgAbsoluteBlackLight = FunctionalToken(GlobalTokens.black60),
    fgAbsoluteBlackLighter = FunctionalToken(GlobalTokens.black40),
    fgAbsoluteBlackLightest = FunctionalToken(GlobalTokens.black20),
    fgAbsoluteWhiteDark = FunctionalToken(GlobalTokens.white100),
    fgAbsoluteWhiteNormal = FunctionalToken(GlobalTokens.white90),
    fgAbsoluteWhiteLight = FunctionalToken(GlobalTokens.white60),
    fgAbsoluteWhiteLighter = FunctionalToken(GlobalTokens.white40),
    fgAbsoluteWhiteLightest = FunctionalToken(GlobalTokens.white20),
    fgGreyDark = FunctionalToken(GlobalTokens.grey500),
    fgGreyNormal = FunctionalToken(GlobalTokens.grey400),
    fgGreyLight = FunctionalToken(GlobalTokens.grey200),
    fgGreyLighter = FunctionalToken(GlobalTokens.grey100),
    fgGreyLightest = FunctionalToken(GlobalTokens.grey50),
    fgGreyGreyAlphaDarker = FunctionalToken(GlobalTokens.greyAlpha200_80),
    fgGreyGreyAlphaDark = FunctionalToken(GlobalTokens.greyAlpha100_80),
    fgGreyGreyAlphaLight = FunctionalToken(GlobalTokens.greyAlpha50_80),
    bgBlackDarkest = FunctionalToken(GlobalTokens.black60),
    bgBlackDarker = FunctionalToken(GlobalTokens.black40),
    bgBlackDark = FunctionalToken(GlobalTokens.black15),
    bgBlackLight = FunctionalToken(GlobalTokens.black8),
    bgBlackLighter = FunctionalToken(GlobalTokens.black5),
    bgBlackLightest = FunctionalToken(GlobalTokens.black3),
    bgBlackTransparent = FunctionalToken(GlobalTokens.black0),
    bgGreyDarkest = FunctionalToken(GlobalTokens.grey900),
    bgGreyDark = FunctionalToken(GlobalTokens.grey500),
    bgGreyLight = FunctionalToken(GlobalTokens.grey200),
    bgGreyLighter = FunctionalToken(GlobalTokens.grey100),
    bgGreyLightest = FunctionalToken(GlobalTokens.grey50),
    bgGreyGreyAlphaDarkest = FunctionalToken(GlobalTokens.greyAlpha200_80),
    bgGreyGreyAlphaDarker = FunctionalToken(GlobalTokens.greyAlpha100_90),
    bgGreyGreyAlphaDark = FunctionalToken(GlobalTokens.greyAlpha100_80),
    bgGreyGreyAlphaLight = FunctionalToken(GlobalTokens.greyAlpha50_80),
    bgGreyNormal = FunctionalToken(GlobalTokens.grey400),
    bgWhiteHighest = FunctionalToken(GlobalTokens.white100),
    bgWhiteHigher = FunctionalToken(GlobalTokens.white100),
    bgWhiteNormal = FunctionalToken(GlobalTokens.white100),
    bgWhiteWhiteAlphaLightest = FunctionalToken(GlobalTokens.white90),
    bgWhiteWhiteAlphaLighter = FunctionalToken(GlobalTokens.white60),
    bgWhiteWhiteAlphaLight = FunctionalToken(GlobalTokens.white20),
    bgWhiteWhiteAlphaTransparent = FunctionalToken(GlobalTokens.white0),
    bgBlueNormal = FunctionalToken(GlobalTokens.blue400),
    bgBlueLight = FunctionalToken(GlobalTokens.blue400_30),
    bgBlueLighter = FunctionalToken(GlobalTokens.blue400_20),
    bgBlueLightest = FunctionalToken(GlobalTokens.blue400_10),
    bgBlueDark = FunctionalToken(GlobalTokens.blue500),
    bgBlueShadeLight = FunctionalToken(GlobalTokens.shadeBlue400_20),
    bgBlueShadeNormal = FunctionalToken(GlobalTokens.shadeBlue400),
    bgCobaltNormal = FunctionalToken(GlobalTokens.cobalt400),
    bgCobaltLight = FunctionalToken(GlobalTokens.cobalt400_30),
    bgCobaltLighter = FunctionalToken(GlobalTokens.cobalt400_20),
    bgCobaltLightest = FunctionalToken(GlobalTokens.cobalt400_10),
    bgCobaltDark = FunctionalToken(GlobalTokens.cobalt500),
    bgCobaltShadeLight = FunctionalToken(GlobalTokens.shadeCobalt400_20),
    bgCobaltShadeNormal = FunctionalToken(GlobalTokens.shadeCobalt400),
    bgRedNormal = FunctionalToken(GlobalTokens.red400),
    bgRedLight = FunctionalToken(GlobalTokens.red400_30),
    bgRedLighter = FunctionalToken(GlobalTokens.red400_20),
    bgRedLightest = FunctionalToken(GlobalTokens.red400_10),
    bgRedDark = FunctionalToken(GlobalTokens.red500),
    bgRedShadeLight = FunctionalToken(GlobalTokens.shadeRed400_20),
    bgRedShadeNormal = FunctionalToken(GlobalTokens.shadeRed400),
    bgOrangeNormal = FunctionalToken(GlobalTokens.orange400),
    bgOrangeLight = FunctionalToken(GlobalTokens.orange400_30),
    bgOrangeLighter = FunctionalToken(GlobalTokens.orange400_20),
    bgOrangeLightest = FunctionalToken(GlobalTokens.orange400_10),
    bgOrangeDark = FunctionalToken(GlobalTokens.orange500),
    bgOrangeShadeLight = FunctionalToken(GlobalTokens.shadeOrange400_20),
    bgOrangeShadeNormal = FunctionalToken(GlobalTokens.shadeOrange400),
    bgGreenNormal = FunctionalToken(GlobalTokens.green400),
    bgGreenLight = FunctionalToken(GlobalTokens.green400_30),
    bgGreenLighter = FunctionalToken(GlobalTokens.green400_20),
    bgGreenLightest = FunctionalToken(GlobalTokens.green400_10),
    bgGreenDark = FunctionalToken(GlobalTokens.green500),
    bgGreenShadeLight = FunctionalToken(GlobalTokens.shadeGreen400_20),
    bgGreenShadeNormal = FunctionalToken(GlobalTokens.shadeGreen400),
    bgTealNormal = FunctionalToken(GlobalTokens.teal400),
    bgTealLight = FunctionalToken(GlobalTokens.teal400_30),
    bgTealLighter = FunctionalToken(GlobalTokens.teal400_20),
    bgTealLightest = FunctionalToken(GlobalTokens.teal400_10),
    bgTealDark = FunctionalToken(GlobalTokens.teal500),
    bgTealShadeLight = FunctionalToken(GlobalTokens.shadeTeal400_20),
    bgTealShadeNormal = FunctionalToken(GlobalTokens.shadeTeal400),
    bgOliveNormal = FunctionalToken(GlobalTokens.olive400),
    bgOliveLight = FunctionalToken(GlobalTokens.olive400_30),
    bgOliveLighter = FunctionalToken(GlobalTokens.olive400_20),
    bgOliveLightest = FunctionalToken(GlobalTokens.olive400_10),
    bgOliveDark = FunctionalToken(GlobalTokens.olive500),
    bgOliveShadeLight = FunctionalToken(GlobalTokens.shadeOlive400_20),
    bgOliveShadeNormal = FunctionalToken(GlobalTokens.shadeOlive400),
    bgYellowNormal = FunctionalToken(GlobalTokens.yellow400),
    bgYellowLight = FunctionalToken(GlobalTokens.yellow400_30),
    bgYellowLighter = FunctionalToken(GlobalTokens.yellow400_20),
    bgYellowLightest = FunctionalToken(GlobalTokens.yellow400_10),
    bgYellowDark = FunctionalToken(GlobalTokens.yellow500),
    bgYellowShadeLight = FunctionalToken(GlobalTokens.shadeYellow400_20),
    bgYellowShadeNormal = FunctionalToken(GlobalTokens.shadeYellow400),
    bgPinkNormal = FunctionalToken(GlobalTokens.pink400),
    bgPinkLight = FunctionalToken(GlobalTokens.pink400_30),
    bgPinkLighter = FunctionalToken(GlobalTokens.pink400_20),
    bgPinkLightest = FunctionalToken(GlobalTokens.pink400_10),
    bgPinkDark = FunctionalToken(GlobalTokens.pink500),
    bgPinkShadeLight = FunctionalToken(GlobalTokens.shadePink400_20),
    bgPinkShadeNormal = FunctionalToken(GlobalTokens.shadePink400),
    bgPurpleNormal = FunctionalToken(GlobalTokens.purple400),
    bgPurpleLight = FunctionalToken(GlobalTokens.purple400_30),
    bgPurpleLighter = FunctionalToken(GlobalTokens.purple400_20),
    bgPurpleLightest = FunctionalToken(GlobalTokens.purple400_10),
    bgPurpleDark = FunctionalToken(GlobalTokens.purple500),
    bgPurpleShadeLight = FunctionalToken(GlobalTokens.shadePurple400_20),
    bgPurpleShadeNormal = FunctionalToken(GlobalTokens.shadePurple400),
    bgNavyNormal = FunctionalToken(GlobalTokens.navy400),
    bgNavyLight = FunctionalToken(GlobalTokens.navy400_30),
    bgNavyLighter = FunctionalToken(GlobalTokens.navy400_20),
    bgNavyLightest = FunctionalToken(GlobalTokens.navy400_10),
    bgNavyDark = FunctionalToken(GlobalTokens.navy500),
    bgNavyShadeLight = FunctionalToken(GlobalTokens.shadeNavy400_20),
    bgNavyShadeNormal = FunctionalToken(GlobalTokens.shadeNavy400),
    bgAbsoluteBlackDark = FunctionalToken(GlobalTokens.black100),
    bgAbsoluteBlackNormal = FunctionalToken(GlobalTokens.black85),
    bgAbsoluteBlackLight = FunctionalToken(GlobalTokens.black60),
    bgAbsoluteBlackLighter = FunctionalToken(GlobalTokens.black40),
    bgAbsoluteBlackLightest = FunctionalToken(GlobalTokens.black20),
    bgAbsoluteBlackTransparent = FunctionalToken(GlobalTokens.black0),
    bgAbsoluteWhiteDark = FunctionalToken(GlobalTokens.white100),
    bgAbsoluteWhiteNormal = FunctionalToken(GlobalTokens.white90),
    bgAbsoluteWhiteLight = FunctionalToken(GlobalTokens.white60),
    bgAbsoluteWhiteLighter = FunctionalToken(GlobalTokens.white40),
    bgAbsoluteWhiteLightest = FunctionalToken(GlobalTokens.white20),
    bgAbsoluteWhiteTransparent = FunctionalToken(GlobalTokens.white0),
    surfaceLowest = FunctionalToken(GlobalTokens.grey100),
    surfaceLower = FunctionalToken(GlobalTokens.grey50),
    surfaceNormal = FunctionalToken(GlobalTokens.white100),
    shadowXlarge = FunctionalToken(GlobalTokens.black30),
    shadowLarge = FunctionalToken(GlobalTokens.black22),
    shadowMedium = FunctionalToken(GlobalTokens.black15),
    shadowSmall = FunctionalToken(GlobalTokens.black8),
    shadowBase = FunctionalToken(GlobalTokens.black5),
    shadowBaseInner = FunctionalToken(GlobalTokens.white12),
)

internal fun darkFunctionalTokens() = FunctionalTokens(
    fgBlackPure = FunctionalToken(GlobalTokens.white100),
    fgBlackDarkest = FunctionalToken(GlobalTokens.white80),
    fgBlackDarker = FunctionalToken(GlobalTokens.white60),
    fgBlackDark = FunctionalToken(GlobalTokens.white40),
    fgBlackLight = FunctionalToken(GlobalTokens.white20),
    fgBlackLightest = FunctionalToken(GlobalTokens.white12),
    fgWhiteNormal = FunctionalToken(GlobalTokens.grey900),
    fgBlueNormal = FunctionalToken(GlobalTokens.blue300),
    fgBlueLight = FunctionalToken(GlobalTokens.blue300_45),
    fgBlueDark = FunctionalToken(GlobalTokens.blue300),
    fgCobaltNormal = FunctionalToken(GlobalTokens.cobalt300),
    fgCobaltLight = FunctionalToken(GlobalTokens.cobalt300_45),
    fgCobaltDark = FunctionalToken(GlobalTokens.cobalt300),
    fgRedNormal = FunctionalToken(GlobalTokens.red300),
    fgRedLight = FunctionalToken(GlobalTokens.red300_45),
    fgRedDark = FunctionalToken(GlobalTokens.red300),
    fgOrangeNormal = FunctionalToken(GlobalTokens.orange300),
    fgOrangeLight = FunctionalToken(GlobalTokens.orange300_45),
    fgOrangeDark = FunctionalToken(GlobalTokens.orange300),
    fgGreenNormal = FunctionalToken(GlobalTokens.green300),
    fgGreenLight = FunctionalToken(GlobalTokens.green300_45),
    fgGreenDark = FunctionalToken(GlobalTokens.green300),
    fgTealNormal = FunctionalToken(GlobalTokens.teal300),
    fgTealLight = FunctionalToken(GlobalTokens.teal300_45),
    fgTealDark = FunctionalToken(GlobalTokens.teal300),
    fgOliveNormal = FunctionalToken(GlobalTokens.olive300),
    fgOliveLight = FunctionalToken(GlobalTokens.olive300_45),
    fgOliveDark = FunctionalToken(GlobalTokens.olive300),
    fgYellowNormal = FunctionalToken(GlobalTokens.yellow300),
    fgYellowLight = FunctionalToken(GlobalTokens.yellow300_45),
    fgYellowDark = FunctionalToken(GlobalTokens.yellow300),
    fgPinkNormal = FunctionalToken(GlobalTokens.pink300),
    fgPinkLight = FunctionalToken(GlobalTokens.pink300_45),
    fgPinkDark = FunctionalToken(GlobalTokens.pink300),
    fgPurpleNormal = FunctionalToken(GlobalTokens.purple300),
    fgPurpleLight = FunctionalToken(GlobalTokens.purple300_45),
    fgPurpleDark = FunctionalToken(GlobalTokens.purple300),
    fgNavyNormal = FunctionalToken(GlobalTokens.navy300),
    fgNavyLight = FunctionalToken(GlobalTokens.navy300_45),
    fgNavyDark = FunctionalToken(GlobalTokens.navy300),
    fgAbsoluteBlackDark = FunctionalToken(GlobalTokens.black100),
    fgAbsoluteBlackNormal = FunctionalToken(GlobalTokens.black85),
    fgAbsoluteBlackLight = FunctionalToken(GlobalTokens.black60),
    fgAbsoluteBlackLighter = FunctionalToken(GlobalTokens.black40),
    fgAbsoluteBlackLightest = FunctionalToken(GlobalTokens.black20),
    fgAbsoluteWhiteDark = FunctionalToken(GlobalTokens.white100),
    fgAbsoluteWhiteNormal = FunctionalToken(GlobalTokens.white90),
    fgAbsoluteWhiteLight = FunctionalToken(GlobalTokens.white60),
    fgAbsoluteWhiteLighter = FunctionalToken(GlobalTokens.white40),
    fgAbsoluteWhiteLightest = FunctionalToken(GlobalTokens.white20),
    fgGreyDark = FunctionalToken(GlobalTokens.grey500),
    fgGreyNormal = FunctionalToken(GlobalTokens.grey600),
    fgGreyLight = FunctionalToken(GlobalTokens.grey700),
    fgGreyLighter = FunctionalToken(GlobalTokens.grey800),
    fgGreyLightest = FunctionalToken(GlobalTokens.grey850),
    fgGreyGreyAlphaDarker = FunctionalToken(GlobalTokens.greyAlpha800_90),
    fgGreyGreyAlphaDark = FunctionalToken(GlobalTokens.greyAlpha800_80),
    fgGreyGreyAlphaLight = FunctionalToken(GlobalTokens.greyAlpha850_80),
    bgBlackDarkest = FunctionalToken(GlobalTokens.black60),
    bgBlackDarker = FunctionalToken(GlobalTokens.white40),
    bgBlackDark = FunctionalToken(GlobalTokens.white20),
    bgBlackLight = FunctionalToken(GlobalTokens.white12),
    bgBlackLighter = FunctionalToken(GlobalTokens.white8),
    bgBlackLightest = FunctionalToken(GlobalTokens.white5),
    bgBlackTransparent = FunctionalToken(GlobalTokens.white0),
    bgGreyDarkest = FunctionalToken(GlobalTokens.white100),
    bgGreyDark = FunctionalToken(GlobalTokens.grey500),
    bgGreyLight = FunctionalToken(GlobalTokens.grey700),
    bgGreyLighter = FunctionalToken(GlobalTokens.grey800),
    bgGreyLightest = FunctionalToken(GlobalTokens.grey850),
    bgGreyGreyAlphaDarkest = FunctionalToken(GlobalTokens.greyAlpha700_80),
    bgGreyGreyAlphaDarker = FunctionalToken(GlobalTokens.greyAlpha800_90),
    bgGreyGreyAlphaDark = FunctionalToken(GlobalTokens.greyAlpha800_80),
    bgGreyGreyAlphaLight = FunctionalToken(GlobalTokens.greyAlpha850_80),
    bgGreyNormal = FunctionalToken(GlobalTokens.grey600),
    bgWhiteHighest = FunctionalToken(GlobalTokens.grey700),
    bgWhiteHigher = FunctionalToken(GlobalTokens.grey800),
    bgWhiteNormal = FunctionalToken(GlobalTokens.grey900),
    bgWhiteWhiteAlphaLightest = FunctionalToken(GlobalTokens.greyAlpha800_80),
    bgWhiteWhiteAlphaLighter = FunctionalToken(GlobalTokens.black60),
    bgWhiteWhiteAlphaLight = FunctionalToken(GlobalTokens.black20),
    bgWhiteWhiteAlphaTransparent = FunctionalToken(GlobalTokens.black0),
    bgBlueNormal = FunctionalToken(GlobalTokens.blue300),
    bgBlueLight = FunctionalToken(GlobalTokens.blue300_45),
    bgBlueLighter = FunctionalToken(GlobalTokens.blue300_30),
    bgBlueLightest = FunctionalToken(GlobalTokens.blue300_15),
    bgBlueDark = FunctionalToken(GlobalTokens.blue400),
    bgBlueShadeLight = FunctionalToken(GlobalTokens.shadeBlue600_40),
    bgBlueShadeNormal = FunctionalToken(GlobalTokens.shadeBlue600),
    bgCobaltNormal = FunctionalToken(GlobalTokens.cobalt300),
    bgCobaltLight = FunctionalToken(GlobalTokens.cobalt300_45),
    bgCobaltLighter = FunctionalToken(GlobalTokens.cobalt300_30),
    bgCobaltLightest = FunctionalToken(GlobalTokens.cobalt300_15),
    bgCobaltDark = FunctionalToken(GlobalTokens.cobalt400),
    bgCobaltShadeLight = FunctionalToken(GlobalTokens.shadeCobalt600_40),
    bgCobaltShadeNormal = FunctionalToken(GlobalTokens.shadeCobalt600),
    bgRedNormal = FunctionalToken(GlobalTokens.red300),
    bgRedLight = FunctionalToken(GlobalTokens.red300_45),
    bgRedLighter = FunctionalToken(GlobalTokens.red300_30),
    bgRedLightest = FunctionalToken(GlobalTokens.red300_15),
    bgRedDark = FunctionalToken(GlobalTokens.red400),
    bgRedShadeLight = FunctionalToken(GlobalTokens.shadeRed600_40),
    bgRedShadeNormal = FunctionalToken(GlobalTokens.shadeRed600),
    bgOrangeNormal = FunctionalToken(GlobalTokens.orange300),
    bgOrangeLight = FunctionalToken(GlobalTokens.orange300_45),
    bgOrangeLighter = FunctionalToken(GlobalTokens.orange300_30),
    bgOrangeLightest = FunctionalToken(GlobalTokens.orange300_15),
    bgOrangeDark = FunctionalToken(GlobalTokens.orange400),
    bgOrangeShadeLight = FunctionalToken(GlobalTokens.shadeOrange600_40),
    bgOrangeShadeNormal = FunctionalToken(GlobalTokens.shadeOrange600),
    bgGreenNormal = FunctionalToken(GlobalTokens.green300),
    bgGreenLight = FunctionalToken(GlobalTokens.green300_45),
    bgGreenLighter = FunctionalToken(GlobalTokens.green300_30),
    bgGreenLightest = FunctionalToken(GlobalTokens.green300_15),
    bgGreenDark = FunctionalToken(GlobalTokens.green400),
    bgGreenShadeLight = FunctionalToken(GlobalTokens.shadeGreen600_40),
    bgGreenShadeNormal = FunctionalToken(GlobalTokens.shadeGreen600),
    bgTealNormal = FunctionalToken(GlobalTokens.teal300),
    bgTealLight = FunctionalToken(GlobalTokens.teal300_45),
    bgTealLighter = FunctionalToken(GlobalTokens.teal300_30),
    bgTealLightest = FunctionalToken(GlobalTokens.teal300_15),
    bgTealDark = FunctionalToken(GlobalTokens.teal400),
    bgTealShadeLight = FunctionalToken(GlobalTokens.shadeTeal600_40),
    bgTealShadeNormal = FunctionalToken(GlobalTokens.shadeTeal600),
    bgOliveNormal = FunctionalToken(GlobalTokens.olive300),
    bgOliveLight = FunctionalToken(GlobalTokens.olive300_45),
    bgOliveLighter = FunctionalToken(GlobalTokens.olive300_30),
    bgOliveLightest = FunctionalToken(GlobalTokens.olive300_15),
    bgOliveDark = FunctionalToken(GlobalTokens.olive400),
    bgOliveShadeLight = FunctionalToken(GlobalTokens.shadeOlive600_40),
    bgOliveShadeNormal = FunctionalToken(GlobalTokens.shadeOlive600),
    bgYellowNormal = FunctionalToken(GlobalTokens.yellow300),
    bgYellowLight = FunctionalToken(GlobalTokens.yellow300_45),
    bgYellowLighter = FunctionalToken(GlobalTokens.yellow300_30),
    bgYellowLightest = FunctionalToken(GlobalTokens.yellow300_15),
    bgYellowDark = FunctionalToken(GlobalTokens.yellow400),
    bgYellowShadeLight = FunctionalToken(GlobalTokens.shadeYellow600_40),
    bgYellowShadeNormal = FunctionalToken(GlobalTokens.shadeYellow600),
    bgPinkNormal = FunctionalToken(GlobalTokens.pink300),
    bgPinkLight = FunctionalToken(GlobalTokens.pink300_45),
    bgPinkLighter = FunctionalToken(GlobalTokens.pink300_30),
    bgPinkLightest = FunctionalToken(GlobalTokens.pink300_15),
    bgPinkDark = FunctionalToken(GlobalTokens.pink400),
    bgPinkShadeLight = FunctionalToken(GlobalTokens.shadePink600_40),
    bgPinkShadeNormal = FunctionalToken(GlobalTokens.shadePink600),
    bgPurpleNormal = FunctionalToken(GlobalTokens.purple300),
    bgPurpleLight = FunctionalToken(GlobalTokens.purple300_45),
    bgPurpleLighter = FunctionalToken(GlobalTokens.purple300_30),
    bgPurpleLightest = FunctionalToken(GlobalTokens.purple300_15),
    bgPurpleDark = FunctionalToken(GlobalTokens.purple400),
    bgPurpleShadeLight = FunctionalToken(GlobalTokens.shadePurple600_40),
    bgPurpleShadeNormal = FunctionalToken(GlobalTokens.shadePurple600),
    bgNavyNormal = FunctionalToken(GlobalTokens.navy300),
    bgNavyLight = FunctionalToken(GlobalTokens.navy300_45),
    bgNavyLighter = FunctionalToken(GlobalTokens.navy300_30),
    bgNavyLightest = FunctionalToken(GlobalTokens.navy300_15),
    bgNavyDark = FunctionalToken(GlobalTokens.navy400),
    bgNavyShadeLight = FunctionalToken(GlobalTokens.shadeNavy600_40),
    bgNavyShadeNormal = FunctionalToken(GlobalTokens.shadeNavy600),
    bgAbsoluteBlackDark = FunctionalToken(GlobalTokens.black100),
    bgAbsoluteBlackNormal = FunctionalToken(GlobalTokens.black85),
    bgAbsoluteBlackLight = FunctionalToken(GlobalTokens.black60),
    bgAbsoluteBlackLighter = FunctionalToken(GlobalTokens.black40),
    bgAbsoluteBlackLightest = FunctionalToken(GlobalTokens.black20),
    bgAbsoluteBlackTransparent = FunctionalToken(GlobalTokens.black0),
    bgAbsoluteWhiteDark = FunctionalToken(GlobalTokens.white100),
    bgAbsoluteWhiteNormal = FunctionalToken(GlobalTokens.white90),
    bgAbsoluteWhiteLight = FunctionalToken(GlobalTokens.white60),
    bgAbsoluteWhiteLighter = FunctionalToken(GlobalTokens.white40),
    bgAbsoluteWhiteLightest = FunctionalToken(GlobalTokens.white20),
    bgAbsoluteWhiteTransparent = FunctionalToken(GlobalTokens.white0),
    surfaceLowest = FunctionalToken(GlobalTokens.grey800),
    surfaceLower = FunctionalToken(GlobalTokens.grey850),
    surfaceNormal = FunctionalToken(GlobalTokens.grey900),
    shadowXlarge = FunctionalToken(GlobalTokens.black60),
    shadowLarge = FunctionalToken(GlobalTokens.black40),
    shadowMedium = FunctionalToken(GlobalTokens.black20),
    shadowSmall = FunctionalToken(GlobalTokens.black15),
    shadowBase = FunctionalToken(GlobalTokens.black8),
    shadowBaseInner = FunctionalToken(GlobalTokens.white8),
)

private class FunctionalToken(bezierColor: BezierColor) : BezierColor by bezierColor
