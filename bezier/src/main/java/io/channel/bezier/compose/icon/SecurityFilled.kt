@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.compose.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material3.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.*
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.compose.BezierIcon

val BezierIcon.SecurityFilled: ImageVector
    get() {
        return _securityFilled ?: ImageVector.Builder(
                name = "SecurityFilled",
                defaultWidth = 24.dp,
                defaultHeight = 24.dp,
                viewportWidth = 24f,
                viewportHeight = 24f,
        ).apply {
            path(
                    fill = SolidColor(Color(0xFF313234)),
                    strokeLineWidth = 1f,
                    pathFillType = PathFillType.EvenOdd,
            ) {
                moveTo(12.0f, 1.932f)
                lineTo(21.0f, 5.307f)
                lineTo(21.0f, 10.0f)
                curveTo(21.0f, 14.6688f, 18.3622f, 18.937f, 14.1862f, 21.0249f)
                lineTo(12.0f, 22.118f)
                lineTo(9.8138f, 21.0249f)
                curveTo(5.6378f, 18.937f, 3.0f, 14.6688f, 3.0f, 10.0f)
                lineTo(3.0f, 5.307f)
                lineTo(12.0f, 1.932f)
                close()
                moveTo(8.5f, 10.2248f)
                lineTo(7.0855f, 11.6387f)
                lineTo(10.8601f, 15.4148f)
                lineTo(17.0f, 9.2748f)
                lineTo(15.5858f, 7.8606f)
                lineTo(10.8603f, 12.5861f)
                lineTo(8.5f, 10.2248f)
                close()
            }
        }.build().also {
            _securityFilled = it
        }
    }

private var _securityFilled: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun SecurityFilledIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcon.SecurityFilled,
            contentDescription = null,
    )
}
