@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon
import io.channel.bezier.BezierIcons

val BezierIcons.Plane: BezierIcon
    get() = object : BezierIcon {
        override val imageVector: ImageVector
            get() = _plane ?: ImageVector.Builder(
                    name = "Plane",
                    defaultWidth = 24.dp,
                    defaultHeight = 24.dp,
                    viewportWidth = 24f,
                    viewportHeight = 24f,
            ).apply {
                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                        pathFillType = PathFillType.EvenOdd,
                ) {
                    moveTo(10.5f, 3.5f)
                    arcTo(1.5f, 1.5f, 180.0f, isMoreThanHalf = false, isPositiveArc = true, 13.5f, 3.5f)
                    lineTo(13.5f, 9.333f)
                    lineTo(21.555f, 14.703f)
                    arcTo(1.0f, 1.0f, 303.71071401021305f, isMoreThanHalf = false, isPositiveArc = true, 22.0f, 15.535f)
                    lineTo(22.0f, 16.653f)
                    arcTo(0.25f, 0.25f, 359.96662436322873f, isMoreThanHalf = false, isPositiveArc = true, 21.67f, 16.889999999999997f)
                    lineTo(13.500000000000002f, 14.166999999999998f)
                    lineTo(13.500000000000002f, 18.5f)
                    lineTo(14.854000000000003f, 19.854f)
                    arcTo(0.5f, 0.5f, 315.072420111427f, isMoreThanHalf = false, isPositiveArc = true, 15.000000000000004f, 20.207f)
                    lineTo(15.000000000000004f, 22.0f)
                    lineTo(12.000000000000004f, 21.0f)
                    lineTo(9.000000000000004f, 22.0f)
                    lineTo(9.000000000000004f, 20.207f)
                    arcTo(0.5f, 0.5f, 180.0121727895169f, isMoreThanHalf = false, isPositiveArc = true, 9.146000000000004f, 19.854f)
                    lineTo(10.5f, 18.5f)
                    lineTo(10.5f, 14.167f)
                    lineTo(2.33f, 16.89f)
                    arcTo(0.25f, 0.25f, 71.33706485463908f, isMoreThanHalf = false, isPositiveArc = true, 2.0f, 16.653000000000002f)
                    lineTo(2.0f, 15.535000000000002f)
                    arcTo(1.0f, 1.0f, 179.9914259494673f, isMoreThanHalf = false, isPositiveArc = true, 2.445f, 14.703000000000001f)
                    lineTo(10.5f, 9.333000000000002f)
                    close()
                }
            }.build().also {
                _plane = it
            }
    }


private var _plane: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun PlaneIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcons.Plane.imageVector,
            contentDescription = null,
    )
}
