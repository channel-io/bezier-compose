@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon
import io.channel.bezier.BezierIcons

val BezierIcons.GooglePlay: BezierIcon
    get() = object : BezierIcon {
        override val imageVector: ImageVector
            get() = _googlePlay ?: ImageVector.Builder(
                    name = "GooglePlay",
                    defaultWidth = 24.dp,
                    defaultHeight = 24.dp,
                    viewportWidth = 24f,
                    viewportHeight = 24f,
            ).apply {
                path(
                        fill = SolidColor(Color(0x66313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                ) {
                    moveTo(13.0f, 12.0f)
                    lineTo(5.074f, 19.502f)
                    curveTo(5.318f, 20.363f, 6.145f, 20.993f, 7.128f, 20.993f)
                    curveTo(7.519f, 20.993f, 7.888f, 20.895f, 8.206f, 20.712999999999997f)
                    lineTo(8.229f, 20.698999999999998f)
                    lineTo(17.079f, 15.862999999999998f)
                    close()
                }

                path(
                        fill = SolidColor(Color(0x99313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                ) {
                    moveTo(20.9f, 10.25f)
                    lineTo(20.892f, 10.25f)
                    lineTo(17.072f, 8.144f)
                    lineTo(13.0f, 12.0f)
                    lineTo(17.087f, 15.870000000000001f)
                    lineTo(20.892f, 13.792000000000002f)
                    curveTo(21.557f, 13.449000000000002f, 22.006999999999998f, 12.784000000000002f, 22.006999999999998f, 12.021f)
                    curveTo(22.006999999999998f, 11.258f, 21.563999999999997f, 10.593f, 20.898999999999997f, 10.257000000000001f)
                    close()
                }

                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                ) {
                    moveTo(5.074f, 4.498f)
                    arcTo(2.0f, 2.0f, 195.64677874185722f, isMoreThanHalf = false, isPositiveArc = false, 5.0f, 5.016f)
                    lineTo(5.0f, 18.99f)
                    curveTo(5.0f, 19.171999999999997f, 5.022f, 19.34f, 5.074f, 19.508f)
                    lineTo(13.0f, 12.0f)
                    close()
                }

                path(
                        fill = SolidColor(Color(0xCC313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                ) {
                    moveTo(13.0f, 12.0f)
                    lineTo(17.073999999999998f, 8.145f)
                    lineTo(8.220999999999998f, 3.287f)
                    arcTo(2.2f, 2.2f, 299.5963072227365f, isMoreThanHalf = false, isPositiveArc = false, 7.121f, 3.0f)
                    curveTo(6.1450000000000005f, 3.0f, 5.311f, 3.65f, 5.074f, 4.504f)
                    close()
                }
            }.build().also {
                _googlePlay = it
            }
    }


private var _googlePlay: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun GooglePlayIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcons.GooglePlay.imageVector,
            contentDescription = null,
    )
}
