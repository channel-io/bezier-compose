@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon
import io.channel.bezier.BezierIcons

val BezierIcons.Ruler: BezierIcon
    get() = object : BezierIcon {
        override val imageVector: ImageVector
            get() = _ruler ?: ImageVector.Builder(
                    name = "Ruler",
                    defaultWidth = 24.dp,
                    defaultHeight = 24.dp,
                    viewportWidth = 24f,
                    viewportHeight = 24f,
            ).apply {
                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        pathFillType = PathFillType.EvenOdd,
                ) {
                    moveTo(7.757f, 20.485f)
                    lineTo(3.5139999999999993f, 16.241999999999997f)
                    lineTo(4.928999999999999f, 14.827999999999998f)
                    lineTo(7.05f, 16.95f)
                    lineTo(8.464f, 15.536f)
                    lineTo(6.344f, 13.416f)
                    lineTo(7.756f, 12.0f)
                    lineTo(9.17f, 13.414f)
                    lineTo(10.586f, 12.0f)
                    lineTo(9.17f, 10.586f)
                    lineTo(10.585f, 9.171f)
                    lineTo(12.0f, 10.584999999999999f)
                    lineTo(13.414f, 9.171f)
                    lineTo(12.0f, 7.757f)
                    lineTo(13.414f, 6.342f)
                    lineTo(15.533999999999999f, 8.463999999999999f)
                    lineTo(16.95f, 7.05f)
                    lineTo(14.828999999999999f, 4.928f)
                    lineTo(16.241999999999997f, 3.5140000000000002f)
                    lineTo(20.485f, 7.757000000000001f)
                    close()
                    moveTo(22.254f, 6.696f)
                    lineTo(17.304000000000002f, 1.7469999999999999f)
                    arcTo(1.5f, 1.5f, 315.03565255877584f, isMoreThanHalf = false, isPositiveArc = false, 16.243000000000002f, 1.307f)
                    lineTo(16.241000000000003f, 1.307f)
                    arcTo(1.5f, 1.5f, 269.9113165072745f, isMoreThanHalf = false, isPositiveArc = false, 15.182000000000004f, 1.7469999999999999f)
                    lineTo(1.747f, 15.182f)
                    arcTo(1.5f, 1.5f, 224.991348337162f, isMoreThanHalf = false, isPositiveArc = false, 1.747f, 17.303f)
                    lineTo(6.697f, 22.253f)
                    curveTo(6.989f, 22.545f, 7.373f, 22.691f, 7.757f, 22.691f)
                    curveTo(8.140999999999998f, 22.691f, 8.525f, 22.544999999999998f, 8.818f, 22.253f)
                    lineTo(22.254f, 8.818f)
                    arcTo(1.5f, 1.5f, 45.018360115491944f, isMoreThanHalf = false, isPositiveArc = false, 22.254f, 6.696f)
                }
            }.build().also {
                _ruler = it
            }
    }


private var _ruler: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun RulerIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcons.Ruler.imageVector,
            contentDescription = null,
    )
}
