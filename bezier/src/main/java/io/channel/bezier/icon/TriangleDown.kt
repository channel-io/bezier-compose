@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon

val BezierIcon.TriangleDown: ImageVector
    get() {
        return io.channel.bezier.icon._triangleDown ?: ImageVector.Builder(
                name = "TriangleDown",
                defaultWidth = 24.dp,
                defaultHeight = 24.dp,
                viewportWidth = 24f,
                viewportHeight = 24f,
        ).apply {
            path(
                    fill = SolidColor(Color(0xFF313234)),
                    strokeLineWidth = 1f,
                    pathFillType = PathFillType.EvenOdd,
            ) {
                moveTo(11.703f, 16.3701f)
                lineTo(6.0904f, 9.6348f)
                curveTo(5.8805f, 9.3824f, 6.0595f, 9.0f, 6.3865f, 9.0f)
                lineTo(17.613f, 9.0f)
                curveTo(17.94f, 9.0f, 18.119f, 9.3824f, 17.9104f, 9.6348f)
                lineTo(12.2966f, 16.3701f)
                curveTo(12.1421f, 16.5555f, 11.8575f, 16.5555f, 11.703f, 16.3701f)
                close()
            }
        }.build().also {
            io.channel.bezier.icon._triangleDown = it
        }
    }

private var _triangleDown: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun TriangleDownIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcon.TriangleDown,
            contentDescription = null,
    )
}
