@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.annotation.DrawableRes
import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon
import io.channel.bezier.BezierIcons
import io.channel.bezier.compose.R

val BezierIcons.Thread: BezierIcon
    get() = object : BezierIcon {
        @DrawableRes
        override val resourceId: Int = R.drawable.icon_thread
        override val imageVector: ImageVector
            get() = _thread ?: ImageVector.Builder(
                    name = "Thread",
                    defaultWidth = 24.dp,
                    defaultHeight = 24.dp,
                    viewportWidth = 24f,
                    viewportHeight = 24f,
            ).apply {
                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                ) {
                    moveTo(16.79f, 11.27f)
                    arcTo(6.0f, 6.0f, 295.72382326239665f, isMoreThanHalf = false, isPositiveArc = false, 16.526999999999997f, 11.151f)
                    curveTo(16.372999999999998f, 8.306f, 14.818999999999997f, 6.678f, 12.207999999999998f, 6.661f)
                    lineTo(12.172999999999998f, 6.661f)
                    curveTo(10.610999999999999f, 6.661f, 9.312999999999999f, 7.327999999999999f, 8.514999999999999f, 8.541f)
                    lineTo(9.95f, 9.525f)
                    curveTo(10.546999999999999f, 8.620000000000001f, 11.482999999999999f, 8.426f, 12.174f, 8.426f)
                    lineTo(12.197999999999999f, 8.426f)
                    curveTo(13.057999999999998f, 8.431000000000001f, 13.704999999999998f, 8.681000000000001f, 14.124999999999998f, 9.169f)
                    quadTo(14.583999999999998f, 9.703000000000001f, 14.734999999999998f, 10.632000000000001f)
                    quadTo(13.591999999999997f, 10.437000000000001f, 12.268999999999998f, 10.514000000000001f)
                    curveTo(9.786999999999999f, 10.656f, 8.192999999999998f, 12.104000000000001f, 8.298999999999998f, 14.114f)
                    curveTo(8.352999999999998f, 15.134f, 8.860999999999997f, 16.012f, 9.729999999999997f, 16.585f)
                    curveTo(10.464999999999996f, 17.07f, 11.409999999999997f, 17.307000000000002f, 12.392999999999997f, 17.253f)
                    curveTo(13.690999999999997f, 17.183f, 14.707999999999997f, 16.686f, 15.418999999999997f, 15.781f)
                    curveTo(15.958999999999996f, 15.094000000000001f, 16.298999999999996f, 14.203000000000001f, 16.449999999999996f, 13.081f)
                    curveTo(17.068999999999996f, 13.453f, 17.526999999999994f, 13.945f, 17.779999999999994f, 14.535f)
                    curveTo(18.209999999999994f, 15.539f, 18.234999999999992f, 17.189f, 16.889999999999993f, 18.533f)
                    curveTo(15.709999999999994f, 19.711000000000002f, 14.292999999999994f, 20.221f, 12.150999999999993f, 20.236f)
                    curveTo(9.774999999999993f, 20.219f, 7.977999999999993f, 19.457f, 6.808999999999993f, 17.972f)
                    curveTo(5.715999999999993f, 16.582f, 5.149999999999993f, 14.572000000000001f, 5.128999999999993f, 12.001000000000001f)
                    curveTo(5.149999999999993f, 9.431000000000001f, 5.715999999999993f, 7.421000000000001f, 6.808999999999993f, 6.0310000000000015f)
                    curveTo(7.978999999999993f, 4.545000000000002f, 9.774999999999993f, 3.7830000000000013f, 12.150999999999993f, 3.7660000000000013f)
                    curveTo(14.543999999999993f, 3.7830000000000013f, 16.372999999999994f, 4.549000000000001f, 17.584999999999994f, 6.042000000000002f)
                    curveTo(18.179999999999993f, 6.774000000000002f, 18.627999999999993f, 7.694000000000002f, 18.923999999999992f, 8.767000000000001f)
                    lineTo(20.60599999999999f, 8.317000000000002f)
                    curveTo(20.24799999999999f, 6.997000000000002f, 19.68399999999999f, 5.858000000000002f, 18.91599999999999f, 4.915000000000002f)
                    curveTo(17.364f, 3.0f, 15.089f, 2.02f, 12.158f, 2.0f)
                    lineTo(12.147f, 2.0f)
                    curveTo(9.22f, 2.02f, 6.972f, 3.004f, 5.46f, 4.925f)
                    curveTo(4.117f, 6.635f, 3.423f, 9.012f, 3.4f, 11.993f)
                    lineTo(3.4f, 12.007f)
                    curveTo(3.423f, 14.989f, 4.117f, 17.367f, 5.461f, 19.075f)
                    curveTo(6.971f, 20.994999999999997f, 9.221f, 21.979f, 12.146f, 22.0f)
                    lineTo(12.157f, 22.0f)
                    curveTo(14.757f, 21.982f, 16.59f, 21.301f, 18.1f, 19.793f)
                    curveTo(20.075000000000003f, 17.819f, 20.016000000000002f, 15.346f, 19.365000000000002f, 13.826999999999998f)
                    curveTo(18.898000000000003f, 12.738999999999997f, 18.007f, 11.853999999999997f, 16.790000000000003f, 11.269999999999998f)
                    moveTo(12.300000000000002f, 15.489999999999998f)
                    curveTo(11.212000000000003f, 15.551999999999998f, 10.082000000000003f, 15.062999999999999f, 10.027000000000003f, 14.017999999999999f)
                    curveTo(9.985000000000003f, 13.242999999999999f, 10.579000000000002f, 12.377999999999998f, 12.367000000000003f, 12.274f)
                    quadTo(12.674000000000003f, 12.257f, 12.970000000000002f, 12.255999999999998f)
                    curveTo(13.620000000000003f, 12.255999999999998f, 14.227000000000002f, 12.319999999999999f, 14.780000000000003f, 12.439999999999998f)
                    curveTo(14.573000000000002f, 15.012999999999998f, 13.365000000000002f, 15.429999999999998f, 12.300000000000002f, 15.488999999999997f)
                    close()
                }
            }.build().also {
                _thread = it
            }
    }


private var _thread: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun ThreadIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcons.Thread.imageVector,
            contentDescription = null,
    )
}
