@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon
import io.channel.bezier.BezierIcons

val BezierIcons.SkipFilled: BezierIcon
    get() = object : BezierIcon {
        override val imageVector: ImageVector
            get() = _skipFilled ?: ImageVector.Builder(
                    name = "SkipFilled",
                    defaultWidth = 24.dp,
                    defaultHeight = 24.dp,
                    viewportWidth = 24f,
                    viewportHeight = 24f,
            ).apply {
                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                        pathFillType = PathFillType.EvenOdd,
                ) {
                    moveTo(15.5f, 11.4f)
                    curveTo(15.9f, 11.700000000000001f, 15.9f, 12.3f, 15.5f, 12.6f)
                    lineTo(5.5f, 20.1f)
                    arcTo(0.75f, 0.75f, 53.130102354155966f, isMoreThanHalf = false, isPositiveArc = true, 4.3f, 19.5f)
                    lineTo(4.3f, 4.5f)
                    arcTo(0.75f, 0.75f, 180.0f, isMoreThanHalf = false, isPositiveArc = true, 5.5f, 3.9f)
                    close()
                }

                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                ) {
                    moveTo(16.3f, 4.2f)
                    arcTo(0.6f, 0.6f, 180.0f, isMoreThanHalf = false, isPositiveArc = true, 16.900000000000002f, 3.6f)
                    lineTo(19.1f, 3.6f)
                    arcTo(0.6f, 0.6f, 269.9999999999999f, isMoreThanHalf = false, isPositiveArc = true, 19.700000000000003f, 4.2f)
                    lineTo(19.700000000000003f, 19.8f)
                    arcTo(0.6f, 0.6f, 0.0f, isMoreThanHalf = false, isPositiveArc = true, 19.1f, 20.400000000000002f)
                    lineTo(16.900000000000002f, 20.400000000000002f)
                    arcTo(0.6f, 0.6f, 89.99999999999986f, isMoreThanHalf = false, isPositiveArc = true, 16.3f, 19.8f)
                    close()
                }
            }.build().also {
                _skipFilled = it
            }
    }


private var _skipFilled: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun SkipFilledIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcons.SkipFilled.imageVector,
            contentDescription = null,
    )
}
