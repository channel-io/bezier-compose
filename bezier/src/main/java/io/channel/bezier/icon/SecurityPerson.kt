@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon
import io.channel.bezier.BezierIcons

val BezierIcons.SecurityPerson: BezierIcon
    get() = object : BezierIcon {
        override val imageVector: ImageVector
            get() = _securityPerson ?: ImageVector.Builder(
                    name = "SecurityPerson",
                    defaultWidth = 24.dp,
                    defaultHeight = 24.dp,
                    viewportWidth = 24f,
                    viewportHeight = 24f,
            ).apply {
                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                ) {
                    moveTo(12.0f, 11.5f)
                    arcTo(2.0f, 2.0f, 90.0f, isMoreThanHalf = true, isPositiveArc = false, 12.0f, 7.5f)
                    arcTo(2.0f, 2.0f, 270.0f, isMoreThanHalf = false, isPositiveArc = false, 12.0f, 11.5f)
                    moveTo(8.0f, 15.739f)
                    curveTo(7.991f, 15.88f, 8.111f, 16.0f, 8.254f, 16.0f)
                    lineTo(15.745999999999999f, 16.0f)
                    curveTo(15.889f, 16.0f, 16.009f, 15.88f, 15.998999999999999f, 15.739f)
                    arcTo(4.004f, 4.004f, 356.2051784699313f, isMoreThanHalf = false, isPositiveArc = false, 12.002f, 12.0f)
                    arcTo(4.005f, 4.005f, 270.05497961584604f, isMoreThanHalf = false, isPositiveArc = false, 8.002f, 15.739f)
                }

                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        strokeAlpha = 1.0f,
                        pathFillType = PathFillType.EvenOdd,
                ) {
                    moveTo(21.0f, 5.307f)
                    lineTo(12.0f, 1.9320000000000004f)
                    lineTo(3.0f, 5.307f)
                    lineTo(3.0f, 10.0f)
                    curveTo(3.0f, 14.669f, 5.638f, 18.936999999999998f, 9.814f, 21.025f)
                    lineTo(12.0f, 22.118f)
                    lineTo(14.186f, 21.025f)
                    arcTo(12.33f, 12.33f, 63.42530511617916f, isMoreThanHalf = false, isPositiveArc = false, 21.0f, 10.0f)
                    close()
                    moveTo(5.0f, 10.0f)
                    lineTo(5.0f, 6.693f)
                    lineTo(12.0f, 4.068f)
                    lineTo(19.0f, 6.693f)
                    lineTo(19.0f, 10.0f)
                    curveTo(19.0f, 13.911f, 16.79f, 17.487000000000002f, 13.292f, 19.236f)
                    lineTo(12.0f, 19.882f)
                    lineTo(10.708f, 19.236f)
                    arcTo(10.33f, 10.33f, 116.57921133122318f, isMoreThanHalf = false, isPositiveArc = true, 5.0f, 10.0f)
                }
            }.build().also {
                _securityPerson = it
            }
    }


private var _securityPerson: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun SecurityPersonIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcons.SecurityPerson.imageVector,
            contentDescription = null,
    )
}
