@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon
import io.channel.bezier.BezierIcons

val BezierIcons.HashtagLarge: BezierIcon
    get() = object : BezierIcon {
        override val imageVector: ImageVector
            get() = _hashtagLarge ?: ImageVector.Builder(
                    name = "HashtagLarge",
                    defaultWidth = 24.dp,
                    defaultHeight = 24.dp,
                    viewportWidth = 24f,
                    viewportHeight = 24f,
            ).apply {
                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        pathFillType = PathFillType.EvenOdd,
                ) {
                    moveTo(10.184f, 3.017f)
                    arcTo(1.0f, 1.0f, 280.59790434879926f, isMoreThanHalf = false, isPositiveArc = true, 10.982999999999999f, 4.184f)
                    lineTo(10.455f, 7.0f)
                    lineTo(15.42f, 7.0f)
                    lineTo(16.017f, 3.816f)
                    arcTo(1.0f, 1.0f, 190.6020591464783f, isMoreThanHalf = false, isPositiveArc = true, 17.983f, 4.184f)
                    lineTo(17.455f, 7.0f)
                    lineTo(20.0f, 7.0f)
                    arcTo(1.0f, 1.0f, 270.0f, isMoreThanHalf = true, isPositiveArc = true, 20.0f, 9.0f)
                    lineTo(17.08f, 9.0f)
                    lineTo(15.954999999999998f, 15.0f)
                    lineTo(19.0f, 15.0f)
                    arcTo(1.0f, 1.0f, 270.0f, isMoreThanHalf = true, isPositiveArc = true, 19.0f, 17.0f)
                    lineTo(15.58f, 17.0f)
                    lineTo(14.983f, 20.184f)
                    arcTo(1.0f, 1.0f, 10.602059338331731f, isMoreThanHalf = false, isPositiveArc = true, 13.017000000000001f, 19.816000000000003f)
                    lineTo(13.545f, 17.0f)
                    lineTo(8.58f, 17.0f)
                    lineTo(7.9830000000000005f, 20.184f)
                    arcTo(1.0f, 1.0f, 10.602059338331731f, isMoreThanHalf = false, isPositiveArc = true, 6.017f, 19.816000000000003f)
                    lineTo(6.545f, 17.0f)
                    lineTo(4.0f, 17.0f)
                    arcTo(1.0f, 1.0f, 90.0f, isMoreThanHalf = true, isPositiveArc = true, 4.0f, 15.0f)
                    lineTo(6.92f, 15.0f)
                    lineTo(8.045f, 9.0f)
                    lineTo(5.0f, 9.0f)
                    arcTo(1.0f, 1.0f, 90.0f, isMoreThanHalf = false, isPositiveArc = true, 5.0f, 7.0f)
                    lineTo(8.42f, 7.0f)
                    lineTo(9.017f, 3.816f)
                    arcTo(1.0f, 1.0f, 190.59790434879923f, isMoreThanHalf = false, isPositiveArc = true, 10.184f, 3.017f)
                    moveTo(13.92f, 15.0f)
                    lineTo(15.045f, 9.0f)
                    lineTo(10.08f, 9.0f)
                    lineTo(8.955f, 15.0f)
                    close()
                }
            }.build().also {
                _hashtagLarge = it
            }
    }


private var _hashtagLarge: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun HashtagLargeIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcons.HashtagLarge.imageVector,
            contentDescription = null,
    )
}
