@file:Suppress("ObjectPropertyName", "UnusedReceiverParameter")

// Auto-generated by script/generate_compose_bezier_icon.py

package io.channel.bezier.icon

import androidx.compose.foundation.layout.size
import androidx.compose.material.Icon
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.PathFillType
import androidx.compose.ui.graphics.SolidColor
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.graphics.vector.path
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import io.channel.bezier.BezierIcon
import io.channel.bezier.BezierIcons

val BezierIcons.Lightning: BezierIcon
    get() = object : BezierIcon {
        override val imageVector: ImageVector
            get() = _lightning ?: ImageVector.Builder(
                    name = "Lightning",
                    defaultWidth = 24.dp,
                    defaultHeight = 24.dp,
                    viewportWidth = 24f,
                    viewportHeight = 24f,
            ).apply {
                path(
                        fill = SolidColor(Color(0xFF313234)),
                        strokeLineWidth = 1f,
                        pathFillType = PathFillType.EvenOdd,
                ) {
                    moveTo(6.526f, 12.537f)
                    lineTo(11.001f, 13.573f)
                    lineTo(9.174f, 19.785f)
                    lineTo(17.474f, 11.462f)
                    lineTo(12.999f, 10.426f)
                    lineTo(14.825000000000001f, 4.214f)
                    close()
                    moveTo(8.146f, 23.037f)
                    curveTo(7.883000000000001f, 23.037f, 7.618f, 22.965f, 7.376000000000001f, 22.820999999999998f)
                    arcTo(1.48f, 1.48f, 120.02914852246481f, isMoreThanHalf = false, isPositiveArc = true, 6.701000000000001f, 21.107999999999997f)
                    lineTo(8.484000000000002f, 15.042999999999996f)
                    lineTo(5.198000000000002f, 14.282999999999996f)
                    arcTo(1.5f, 1.5f, 103.04601993869294f, isMoreThanHalf = false, isPositiveArc = true, 4.474000000000002f, 11.762999999999996f)
                    lineTo(14.798f, 1.41f)
                    arcTo(1.48f, 1.48f, 224.3077196221451f, isMoreThanHalf = false, isPositiveArc = true, 16.624f, 1.178f)
                    curveTo(17.224f, 1.5339999999999998f, 17.496f, 2.222f, 17.299f, 2.891f)
                    lineTo(15.514999999999999f, 8.956f)
                    lineTo(18.802f, 9.716999999999999f)
                    arcTo(1.5f, 1.5f, 283.0461064467155f, isMoreThanHalf = false, isPositiveArc = true, 19.525f, 12.238f)
                    lineTo(9.202f, 22.59f)
                    arcTo(1.49f, 1.49f, 44.479960713718135f, isMoreThanHalf = false, isPositiveArc = true, 8.146f, 23.036f)
                }
            }.build().also {
                _lightning = it
            }
    }


private var _lightning: ImageVector? = null

@Preview(showBackground = true)
@Composable
private fun LightningIconPreview() {
    Icon(
            modifier = Modifier.size(128.dp),
            imageVector = BezierIcons.Lightning.imageVector,
            contentDescription = null,
    )
}
